<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- Add support for component scanning -->
	<context:component-scan base-package="com.hullo" />

	<!-- Add support for conversion, formatting and validation support -->
	<mvc:annotation-driven />

	<!-- Define Spring MVC view resolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Step 1: Define Database DataSource / connection pool -->
	<bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
       <!--  <property name="jdbcUrl" value="jdbc:mysql://hullo.cx84fsxg8a9x.us-west-2.rds.amazonaws.com:3306/hullo" />
        <property name="user" value="admin_hullo" />
        <property name="password" value="vA$6tg0o" /> -->
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/hullo" />
        <property name="user" value="root" />
        <property name="password" value="root" />

		<!-- these are connection pool properties for C3P0 -->
		<property name="minPoolSize" value="3" />
		<property name="maxPoolSize" value="20" />
		<property name="maxIdleTime" value="30000" />
	</bean>

	<!-- Step 2: Setup Hibernate session factory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="packagesToScan" value="com.hullo.entity" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<!-- Step 3: Setup Hibernate transaction manager -->
	<bean id="myTransactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Envio de emails -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="email-smtp.us-west-2.amazonaws.com" />
		<property name="port" value="465" />
		<property name="protocol" value="smtps" />
		<property name="username" value="AKIAI7X3LCAUBPPRHQJQ" />
		<property name="password" value="AgNBnaC73Gb7OTcMy4S4gPuN2yjuFePuJ5saTBRhXl3H" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtps.auth">true</prop>
				<prop key="mail.smtp.ssl.enable">true</prop>
				<prop key="mail.transport.protocol">smtps</prop>
			</props>
		</property>
	</bean>

	<!-- Step 4: Enable configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="myTransactionManager" />

	<!-- Add support for web resources: physical directory in the project and 
		url mapping to subdirectories -->
	<mvc:resources location="/resources/" mapping="/resources/**"></mvc:resources>

	<!-- Interceptador para garantir que somente usuarios logados acessem o 
		sistema -->
	<mvc:interceptors>
		<bean class="com.hullo.controller.AutorizadorInterceptor" />
	</mvc:interceptors>
</beans>


